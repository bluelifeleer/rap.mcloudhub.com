{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"script-compiled.js","sourcesContent":["'use strict'\r\nconst os = require('os')\r\nconst path = require('path')\r\nconst fs = require('fs')\r\nconst http = require('http')\r\nconst https = require('https')\r\nconst http2 = require('spdy')\r\nconst assert = require('assert')\r\nconst express = require('express')\r\nconst bodyParser = require('body-parser')\r\nconst cookieParser = require('cookie-parser')\r\nconst cors = require('cors')\r\nconst csurf = require('csurf')\r\nconst helmet = require('helmet')\r\nconst session = require('express-session')\r\nconst favicon = require('serve-favicon')\r\nconst morgan = require('morgan')\r\nconst rfs = require('rotating-file-stream')\r\nconst cdn = require('express-simple-cdn')\r\nconst swig = require('swig')\r\nconst debug = require('debug')('tools')\r\nconst sillyDateTime = require('silly-datetime')\r\nconst supportsColor = require('supports-color')\r\nconst MongoDBStore = require('connect-mongodb-session')(session)\r\nconst mongoose = require('mongoose')\r\nmongoose.Promise = require('bluebird')\r\nconst uuidv4 = require('uuid/v4')\r\nconst expressRequestId = require('express-request-id')()\r\nconst expressCurl = require('express-curl')\r\nconst md5 = require('md5')\r\nconst sockerIO = require('socket.io')\r\nconst flash = require('flash');\r\nconst winston = require('winston');\r\nconst expressWinston = require('express-winston');\r\nconst app = express()\r\n\r\n//是否启动记录访问日志\r\nconst STARTLOG = true;\r\nconst options = {\r\n\tkey: fs.readFileSync(path.join(__dirname + '/ssl/rap.mcloudhub.com.key')),\r\n\tcert: fs.readFileSync(path.join(__dirname + '/ssl/rap.mcloudhub.com.pem'))\r\n};\r\n//设置模板引擎\r\napp.engine('html', swig.renderFile);\r\n//  设置模板路径\r\napp.set('views', path.join(__dirname, '/applications/views'));\r\n// 注册模板\r\napp.set('view engine', 'html');\r\n// 将模板缓存设置false\r\nswig.setDefaults({\r\n\tcache: false\r\n});\r\napp.use(helmet());\r\n// 设置跨域\r\napp.use(cors());\r\n// 设置request id\r\napp.use(expressRequestId);\r\n// extends设置true表示接收的数据是数组，false表示是字符串\r\napp.use(bodyParser.urlencoded({\r\n\textended: true\r\n}));\r\n// 将提交的数据转成json,并且设置请求实体大小\r\napp.use(bodyParser.json({\r\n\tlimit: '50mb'\r\n}));\r\napp.use(bodyParser.urlencoded({\r\n\tlimit: '50mb',\r\n\textended: true\r\n}));\r\napp.use(cookieParser('session_id', {\r\n\tmaxAge: 1800000,\r\n\tsecure: true\r\n}));\r\n// app.use(expressCurl);\r\n\r\nconst store = new MongoDBStore({\r\n\turi: 'mongodb://localhost:27017',\r\n\tdatabaseName: 'rap',\r\n\tcollection: 'sessions'\r\n}, err => {\r\n\tif (err) throw err;\r\n});\r\n\r\nstore.on('error', error => {\r\n\tassert.ifError(error);\r\n\tassert.ok(false);\r\n});\r\n\r\napp.use(session({\r\n\tgenid: function(req) {\r\n\t\treturn uuidv4() // use UUIDs for session IDs\r\n\t},\r\n\tsecret: 'session_id', // 与cookieParser中的一致\r\n\tresave: true, // 设置强制刷新session\r\n\tstore: store, // 将session保存到mongodb中\r\n\tsaveUninitialized: false, // 是否保存未初始化的会话，如果是true则会保存许多session会导致保存有效session失败,一般设置为false.\r\n\tcookie: {\r\n\t\tsecure: true,\r\n\t\tmaxAge: 1800000,\r\n\t},\r\n\trolling: true\r\n}));\r\n\r\napp.use(flash());\r\n\r\n// 服务器启动时默认配置/动作\r\napp.use(function(req, res, next) {\r\n\t// //将登录后的用户信息附加到request头信息中\r\n\tif (req.cookies.uid && req.cookies.uid != '') {\r\n\t\ttry {\r\n\t\t\treq.session.uid = req.cookies.uid;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\t// 将系统类型添加到cookies和请求头中;\r\n\t// os.platform return now node runing systems : darwin=>MAC win32=>windows\r\n\tres.cookie('platform', os.platform);\r\n\treq.platform = os.platform;\r\n\t// flash a message\r\n\treq.flash('info', 'hello!');\r\n\tres.locals.errors = req.flash('error');\r\n\tres.locals.infos = req.flash('info');\r\n\tnext();\r\n});\r\n\r\napp.use(expressWinston.logger({\r\n\ttransports: [\r\n\t\t// 将日志信息打印在控制台\r\n\t\tnew winston.transports.Console(),\r\n\t\tnew winston.transports.File({\r\n\t\t\tfilename: path.join(__dirname, 'logs/error.log'),\r\n\t\t\tlevel: 'error'\r\n\t\t}),\r\n\t\tnew winston.transports.File({\r\n\t\t\tfilename: path.join(__dirname, 'logs/combined.log')\r\n\t\t})\r\n\t],\r\n\tformat: winston.format.combine(winston.format.colorize(), winston.format.json()),\r\n\tmeta: true, // optional: control whether you want to log the meta data about the request (default to true)\r\n\tmsg: \"HTTP {{req.method}} {{req.url}}\", // optional: customize the default logging message. E.g. \"{{res.statusCode}} {{req.method}} {{res.responseTime}}ms {{req.url}}\"\r\n\texpressFormat: true, // Use the default Express/morgan request formatting. Enabling this will override any msg if true. Will only output colors with colorize set to true\r\n\tcolorize: true, // Color the text and status code, using the Express/morgan color palette (text: gray, status: default green, 3XX cyan, 4XX yellow, 5XX red).\r\n\tignoreRoute: function(req, res) {\r\n\t\treturn false;\r\n\t} // optional: allows to skip some log messages based on request and/or response\r\n}));\r\n\r\napp.use(csurf({\r\n\tcookie: true,\r\n\tignoreMethods: ['GET', 'POST']\r\n}));\r\napp.use(function(err, req, res, next) {\r\n\tif (err.code !== 'EBADCSRFTOKEN') return next(err)\r\n\t// handle CSRF token errors here\r\n\tres.status(403)\r\n\tres.send('form tampered with')\r\n});\r\n\r\n// 记录访问日志\r\nif (STARTLOG) {\r\n\tconst logDirectory = path.join(__dirname, 'logs');\r\n\tfs.existsSync(logDirectory) || fs.mkdirSync(logDirectory); // 日志目录不存在创建目录\r\n\tconst logerFile = 'access_' + sillyDateTime.format(new Date(), 'YYYY_MMM_DD') + '.log';\r\n\tconst accessLogStream = rfs(logerFile, {\r\n\t\tinterval: '1d', // 日志切割间隔为1天，以s,m,h,d为单位\r\n\t\tpath: logDirectory, // 日志保存路径，\r\n\t\tsize: '1M', // 单个日志文件的大小，以B,K,M,G为单位\r\n\t\tcompress: true // 压缩日志\r\n\t});\r\n\tapp.use(morgan('combined', {\r\n\t\tstream: accessLogStream\r\n\t}));\r\n}\r\n\r\n//设置静态文件托管\r\napp.use('/static', express.static(path.join(__dirname, '/applications/statics')));\r\napp.use(favicon(path.join(__dirname, './', 'favicon.ico')));\r\n\r\n// 定义路由www\r\napp.use('/', require(path.join(__dirname, '/applications/routers/main')));\r\napp.use('/api', require(path.join(__dirname, '/applications/routers/api')));\r\napp.use('/mock', require(path.join(__dirname, '/applications/routers/mock')));\r\n\r\n// 处理404请求\r\n// app.get('*', (req, res) => {\r\n//     res.render(path.join(__dirname, '/app/views/404'), {\r\n//         title: 'No Found'\r\n//     });\r\n// });\r\n\r\nmongoose.connect('mongodb://localhost:27017/rap', {\r\n\tuseNewUrlParser: true\r\n}, (err, res) => {\r\n\tif (err) {\r\n\t\tdebug(err);\r\n\t} else {\r\n\t\t// 数据库连接成功后监听80/443端口\r\n\t\t// app.listen(80);\r\n\t\thttp.createServer(app).listen(80);\r\n\t\t// https.createServer(options, app).listen(443);\r\n\t\tconst server = http2.createServer(options, app);\r\n\t\tconst IO = sockerIO(server)\r\n\t\tIO.on('connection', (socket) => {\r\n\t\t\tconsole.log('socket client connected ....')\r\n\t\t\tsocket.on('minix', (data) => {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t})\r\n\r\n\t\t\tsocket.on('disconnect', () => {\r\n\t\t\t\tconsole.log('socket client disconneted .....')\r\n\t\t\t})\r\n\t\t})\r\n\t\tserver.listen(443);\r\n\r\n\t}\r\n});\r\n// app.listen(8080);\r\nmodule.exports = app;\r\n"]}